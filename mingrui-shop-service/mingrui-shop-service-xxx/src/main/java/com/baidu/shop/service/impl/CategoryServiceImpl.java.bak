package com.baidu.shop.mapper;

import com.baidu.shop.base.BaseApiService;
import com.baidu.shop.base.Result;
import com.baidu.shop.entity.CategoryEntity;
import com.baidu.shop.service.CategoryService;
import com.baidu.shop.utils.ObjectUtil;
import com.google.gson.JsonObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.RestController;
import tk.mybatis.mapper.entity.Example;

import java.util.List;

/**
 * @ClassName CategoryServiceImpl
 * @Description: TODO
 * @Author wangyanjun
 * @Date 2020/12/22
 * @Version V1.0
 **/
@RestController
public class CategoryServiceImpl extends BaseApiService implements CategoryService {

    @Autowired
    private CategoryMapper categoryMapper;

    @Override
    public Result<List<CategoryEntity>> getCategoryByPid(Integer pid) {
        CategoryEntity categoryEntity = new CategoryEntity();
        categoryEntity.setParentId(pid);
        List<CategoryEntity> list = categoryMapper.select(categoryEntity);
        return this.setResultSuccess(list);
    }

    @Transactional  //作用提交事务      增删改查必须加这个
    @Override
    public Result<JsonObject> delCategory(Integer id) {
        //判断当前节点是否为父节点
        // 如果当前被删除的节点的父节点下 只有当前节点
        // 那父节点应该变成子节点   ---> isParent = 0

        //1. 通过当前id查询数据
        if( null != id && id > 0 ){
            categoryMapper.
        }

        //2.判断是否为父节点

        // 3. 通过父节点id查询是否有parent_id 为父节点id的其他数据
        // select * from tb_category parent_id = ?
        // 如果返回的数据 > 1 的时候说明当前节点的父节点下还有其他节点  所以 父节点的is_parent = 1

        // 如果返回的数据 <= 1 时候   将当前节点的父节点is_parent = 0

        // 一个方法中有修改 / 删除  ---> 事务

        //通过id删除节点
        categoryMapper.deleteByPrimaryKey(id);
        return this.setResultSuccess();
    }
}
